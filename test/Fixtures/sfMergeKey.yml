--- %YAML:1.0
test: Simple In Place Substitution
todo: true
brief: >
    If you want to reuse an entire alias, only overwriting what is different
    you can use a << in place substitution. This is not part of the official
    YAML spec, but a widely implemented extension. See the following URL for
    details: http://yaml.org/type/merge.html
yaml: |
    foo: &foo
        a: Steve
        b: Clark
        c: Brian
    bar: &bar
        <<: *foo
        x: Oren
    foo2: &foo2
        a: Ballmer
    ding: &dong [ fi, fei, fo, fam]
    check:
        <<:
            - *foo
            - *dong
        isit: tested
    head:
        <<: [ *foo , *dong , *foo2 ]
python: |
    OrderedDict([
        ('foo' , OrderedDict([
                    ('a' , 'Steve'),
                    ('b' , 'Clark'),
                    ('c' , 'Brian')
                 ])),
        ('bar' , OrderedDict([
                    ('a' , 'Steve'),
                    ('b' , 'Clark'),
                    ('c' , 'Brian'),
                    ('x' , 'Oren')
                 ])),
        ('foo2' , OrderedDict([
                    ('a' , 'Ballmer')
                  ])),
        ('ding' , ['fi', 'fei', 'fo', 'fam']),
        ('check' , OrderedDict([
                        ('a' , 'Steve'),
                        ('b' , 'Clark'),
                        ('c' , 'Brian'),
                        (0 , 'fi'),
                        (1 , 'fei'),
                        (2 , 'fo'),
                        (3 , 'fam'),
                        ('isit' , 'tested')
                    ])),
         ('head' , OrderedDict([
                        ('a' , 'Ballmer'),
                        ('b' , 'Clark'),
                        ('c' , 'Brian'),
                        (0 , 'fi'),
                        (1 , 'fei'),
                        (2 , 'fo'),
                        (3 , 'fam'),
                   ]))
    ])
